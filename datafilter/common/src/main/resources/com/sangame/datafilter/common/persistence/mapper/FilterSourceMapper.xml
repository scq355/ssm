<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sangame.datafilter.common.persistence.mapper.FilterSourceMapper">

<resultMap type="com.sangame.datafilter.common.persistence.model.FilterSource" id="FilterSourceBaseMapper">
	<id property="id" column="id" />
	<id property="sourceKey" column="source_key" />
	<id property="sourceName" column="source_name" />
	<id property="auditRule" column="audit_rule" />
	<id property="creator" column="creator" />
	<id property="modifier" column="modifier" />
	<id property="createdAt" column="created_at" />
	<id property="updatedAt" column="updated_at" />
</resultMap>  

<insert id="insert">
	<selectKey resultType="long" keyProperty="id">  
   		select LAST_INSERT_ID()
   	</selectKey>
	insert into filter_source
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="sourceKey != null">
			source_key,
		</if>
		<if test="sourceName != null">
			source_name,
		</if>
		<if test="auditRule != null">
			audit_rule,
		</if>
		<if test="creator != null">
			creator,
		</if>
		<if test="modifier != null">
			modifier,
		</if>
		<if test="createdAt != null">
			created_at,
		</if>
		<if test="updatedAt != null">
			updated_at,
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="sourceKey != null">
			#{sourceKey},
		</if>
		<if test="sourceName != null">
			#{sourceName},
		</if>
		<if test="auditRule != null">
			#{auditRule},
		</if>
		<if test="creator != null">
			#{creator},
		</if>
		<if test="modifier != null">
			#{modifier},
		</if>
		<if test="createdAt != null">
			#{createdAt},
		</if>
		<if test="updatedAt != null">
			#{updatedAt},
		</if>
	</trim>
</insert>

<update id="update">
	UPDATE filter_source 
	<set>
			<if test="sourceKey != null">  
	        	source_key = #{sourceKey},
	    	</if>
			<if test="sourceName != null">  
	        	source_name = #{sourceName},
	    	</if>
			<if test="auditRule != null">  
	        	audit_rule = #{auditRule},
	    	</if>
			<if test="creator != null">  
	        	creator = #{creator},
	    	</if>
			<if test="modifier != null">  
	        	modifier = #{modifier},
	    	</if>
			<if test="createdAt != null">  
	        	created_at = #{createdAt},
	    	</if>
			<if test="updatedAt != null">  
	        	updated_at = #{updatedAt},
	    	</if>
	</set>   
    WHERE id=#{id}
</update>

<delete id="delete">
	delete from filter_source where id=#{id}
</delete>

<select id="getById" resultMap="FilterSourceBaseMapper">
	SELECT * FROM filter_source WHERE id=#{id} 
</select>

<select id="countByParm" resultType="integer">
	select count(*) from filter_source  where 1=1 
			<if test="parm.sourceKey != null">
		     	and source_key = #{parm.sourceKey}
		   	</if>
			<if test="parm.sourceName != null">
		     	and source_name = #{parm.sourceName}
		   	</if>
			<if test="parm.auditRule != null">
		     	and audit_rule = #{parm.auditRule}
		   	</if>
			<if test="parm.creator != null">
		     	and creator = #{parm.creator}
		   	</if>
			<if test="parm.modifier != null">
		     	and modifier = #{parm.modifier}
		   	</if>
			<if test="parm.createdAt != null">
		     	and created_at = #{parm.createdAt}
		   	</if>
			<if test="parm.updatedAt != null">
		     	and updated_at = #{parm.updatedAt}
		   	</if>
</select>

<select id="getListByParm" resultMap="FilterSourceBaseMapper">
	select * from filter_source where 1=1 
			<if test="parm.sourceKey != null">
		     	and source_key = #{parm.sourceKey}
		   	</if>
			<if test="parm.sourceName != null">
		     	and source_name = #{parm.sourceName}
		   	</if>
			<if test="parm.auditRule != null">
		     	and audit_rule = #{parm.auditRule}
		   	</if>
			<if test="parm.creator != null">
		     	and creator = #{parm.creator}
		   	</if>
			<if test="parm.modifier != null">
		     	and modifier = #{parm.modifier}
		   	</if>
			<if test="parm.createdAt != null">
		     	and created_at = #{parm.createdAt}
		   	</if>
			<if test="parm.updatedAt != null">
		     	and updated_at = #{parm.updatedAt}
		   	</if>
		<if test="page!=null and page.pageSize>0">
			limit #{page.startRow},#{page.pageSize}
		</if>
		<if test="page!=null and page.orderBy != null">
			order by #{page.orderBy}
		</if>
</select>


<select id="getMapListByParm" parameterType="HashMap" resultType="HashMap">
	select * from filter_source where 1=1 
</select>


</mapper>