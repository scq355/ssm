<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sangame.datafilter.common.persistence.mapper.audit.FilterDataExceptionMapper">

	<resultMap type="com.sangame.datafilter.common.persistence.model.audit.FilterDataException" id="FilterDataExceptionBaseMapper">
		<id property="id" column="id" />
		<result property="msg" column="msg" />
		<result property="projectType" column="project_type" />
		<result property="status" column="status" />
		<result property="dealType" column="deal_type" />
		<result property="json" column="json" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>

	<sql id="columns">
		id,msg,project_type,status,deal_type,json,created_at,updated_at
	</sql>

	<sql id="searchDataSql">
		<where>
				status = 1
			<if test="projectType!= null">
				AND project_type = #{projectType}
			</if>
			<if test="queryBeginTime != null">
				AND created_at &gt; #{queryBeginTime}
			</if>
			<if test="queryEndTime != null">
				AND created_at &lt; #{queryEndTime}
			</if>
		</where>
	</sql>

	<sql id="limitSql">
		limit #{pageStart},#{pageSize}
	</sql>

	<insert id="insert">
		INSERT INTO filter_data_exception(<include refid="columns"/>)
		VALUES (#{id},#{msg},#{projectType},#{status},#{dealType},#{json},#{createdAt},#{updatedAt})
	</insert>

	<update id="updateStatus" parameterType="com.sangame.datafilter.common.persistence.model.audit.FilterDataException">
		UPDATE filter_data_exception SET status = #{status} WHERE id = #{id}
	</update>

	<select id="searchDatas" parameterType="com.sangame.datafilter.common.persistence.model.audit.FilterDataException"
			resultMap="FilterDataExceptionBaseMapper">
		SELECT <include refid="columns"/> FROM filter_data_exception
		<include refid="searchDataSql"/>
		<include refid="limitSql"/>
	</select>

	<select id="searchDatasCount" parameterType="com.sangame.datafilter.common.persistence.model.audit.FilterDataException" resultType="int">
		SELECT COUNT(1) FROM filter_data_exception
		<include refid="searchDataSql"/>
	</select>

</mapper>