<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.sangame.datafilter.common.persistence.mapper.FilterBlackUserMapper">

<resultMap type="com.sangame.datafilter.common.persistence.model.FilterBlackUser" id="FilterBlackUserBaseMapper">
	<id property="id" column="id" />
	<id property="userId" column="user_id" />
	<id property="userName" column="user_name" />
	<id property="ip" column="ip" />
	<id property="blackEndTime" column="black_end_time" />
	<id property="blackReason" column="black_reason" />
	<id property="blackState" column="black_state" />
	<id property="blackWay" column="black_way" />
	<id property="creator" column="creator" />
	<id property="modifier" column="modifier" />
	<id property="createdAt" column="created_at" />
	<id property="updatedAt" column="updated_at" />
</resultMap>

<insert id="insert">
	<selectKey resultType="long" keyProperty="id">  
   		select LAST_INSERT_ID()
   	</selectKey>
	insert into filter_black_user
	<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="userId != null">
			user_id,
		</if>
		<if test="userName != null">
			user_name,
		</if>
		<if test="ip != null">
			ip,
		</if>
		<if test="blackEndTime != null">
			black_end_time,
		</if>
		<if test="blackReason != null">
			black_reason,
		</if>
		<if test="blackState != null">
			black_state,
		</if>
		<if test="blackWay != null">
			black_way,
		</if>
		<if test="creator != null">
			creator,
		</if>
		<if test="modifier != null">
			modifier,
		</if>
		<if test="createdAt != null">
			created_at,
		</if>
		<if test="updatedAt != null">
			updated_at,
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="userId != null">
			#{userId},
		</if>
		<if test="userName != null">
			#{userName},
		</if>
		<if test="ip != null">
			#{ip},
		</if>
		<if test="blackEndTime != null">
			#{blackEndTime},
		</if>
		<if test="blackReason != null">
			#{blackReason},
		</if>
		<if test="blackState != null">
			#{blackState},
		</if>
		<if test="blackWay != null">
			#{blackWay},
		</if>
		<if test="creator != null">
			#{creator},
		</if>
		<if test="modifier != null">
			#{modifier},
		</if>
		<if test="createdAt != null">
			#{createdAt},
		</if>
		<if test="updatedAt != null">
			#{updatedAt},
		</if>
	</trim>
</insert>
	


<update id="update">
	UPDATE filter_black_user 
	<set>
			<if test="userId != null">  
	        	user_id = #{userId},
	    	</if>
			<if test="userName != null">  
	        	user_name = #{userName},
	    	</if>
			<if test="ip != null">  
	        	ip = #{ip},
	    	</if>
			<if test="blackEndTime != null">  
	        	black_end_time = #{blackEndTime},
	    	</if>
			<if test="blackReason != null">  
	        	black_reason = #{blackReason},
	    	</if>
			<if test="blackState != null">  
	        	black_state = #{blackState},
	    	</if>
			<if test="blackWay != null">  
	        	black_way = #{blackWay},
	    	</if>
			<if test="creator != null">  
	        	creator = #{creator},
	    	</if>
			<if test="modifier != null">  
	        	modifier = #{modifier},
	    	</if>
			<if test="createdAt != null">  
	        	created_at = #{createdAt},
	    	</if>
			<if test="updatedAt != null">  
	        	updated_at = #{updatedAt},
	    	</if>
	</set>   
    WHERE id=#{id}
</update>

<!--根据ids获取黑名单列表-->
<select id="getListByIds" parameterType="java.util.List" resultMap="FilterBlackUserBaseMapper">
	select * FROM filter_black_user WHERE id IN
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
</select>


<!--黑名单Id批量冻结-->
<update id="batchBlockById" parameterType="java.util.List">
	UPDATE filter_black_user SET black_state = 1 WHERE id IN
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
</update>

<!--黑名单Id批量解冻-->
<update id="batchFreezeById" parameterType="java.util.List">
	UPDATE filter_black_user SET black_state = 2 WHERE id IN
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
</update>

<delete id="delete">
	delete from filter_black_user where id=#{id}
</delete>

<select id="getById" resultMap="FilterBlackUserBaseMapper">
	SELECT * FROM filter_black_user WHERE id=#{id} 
</select>

<select id="countByParm" resultType="integer">
	select count(*) from filter_black_user  where 1=1 
			<if test="parm.userId != null">
		     	and user_id = #{parm.userId}
		   	</if>
			<if test="parm.userName != null">
		     	AND user_name #{parm.user_name}
		   	</if>
		   	<if test="parm.userNameLike != null">
		     	AND user_name LIKE concat('%',#{parm.userNameLike},'%')
		   	</if>
			<if test="parm.ip != null">
		     	and ip = #{parm.ip}
		   	</if>
			<if test="parm.blackEndTime != null">
		     	and black_end_time = #{parm.blackEndTime}
		   	</if>
			<if test="parm.blackReason != null">
		     	and black_reason = #{parm.blackReason}
		   	</if>
			<if test="parm.blackState != null">
		     	and black_state = #{parm.blackState}
		   	</if>
			<if test="parm.blackWay != null">
		     	and black_way = #{parm.blackWay}
		   	</if>
			<if test="parm.creator != null">
		     	and creator = #{parm.creator}
		   	</if>
			<if test='parm.modifier != null and parm.modifier != "其它"'>
		     	and modifier = #{parm.modifier}
		   	</if>
		   	<if test='parm.modifier != null and parm.modifier == "其它"'>
		     	and modifier != '系统'
		   	</if>
			<if test="parm.createdAt != null">
		     	and created_at = #{parm.createdAt}
		   	</if>
			<if test="parm.updatedAt != null">
		     	and updated_at = #{parm.updatedAt}
		   	</if>
</select>

<select id="getBlackUsersBeforeNowTime" resultMap="FilterBlackUserBaseMapper">
	SELECT * FROM filter_black_user WHERE black_end_time <![CDATA[ <= ]]> #{nowTime}
</select>


<select id="getIdList" resultType="Integer">
	SELECT filter_black_user.id FROM filter_black_user;
</select>
<select id="getListByParm" resultMap="FilterBlackUserBaseMapper">
	select * from filter_black_user where 1=1 
			<if test="parm.userId != null">
		     	and user_id = #{parm.userId}
		   	</if>
			<if test="parm.userName != null">
		     	AND user_name #{parm.user_name}
		   	</if>
		   	<if test="parm.userNameLike != null">
		     	AND user_name LIKE concat('%',#{parm.userNameLike},'%')
		   	</if>
			<if test="parm.ip != null">
		     	and ip = #{parm.ip}
		   	</if>
			<if test="parm.blackEndTime != null">
		     	and black_end_time = #{parm.blackEndTime}
		   	</if>
			<if test="parm.blackReason != null">
		     	and black_reason = #{parm.blackReason}
		   	</if>
			<if test="parm.blackState != null">
		     	and black_state = #{parm.blackState}
		   	</if>
			<if test="parm.blackWay != null">
		     	and black_way = #{parm.blackWay}
		   	</if>
			<if test="parm.creator != null">
		     	and creator = #{parm.creator}
		   	</if>
			<if test='parm.modifier != null and parm.modifier != "其它"'>
		     	and modifier = #{parm.modifier}
		   	</if>
		   	<if test='parm.modifier != null and parm.modifier == "其它"'>
		     	and modifier != '系统'
		   	</if>
			<if test="parm.createdAt != null">
		     	and created_at = #{parm.createdAt}
		   	</if>
			<if test="parm.updatedAt != null">
		     	and updated_at = #{parm.updatedAt}
		   	</if>
		<if test="page!=null and page.pageSize>0">
			limit #{page.startRow},#{page.pageSize}
		</if>
		<if test="page!=null and page.orderBy != null">
			order by #{page.orderBy}
		</if>
</select>


<select id="getMapListByParm" parameterType="HashMap" resultType="HashMap">
	select * from filter_black_user where 1=1 
</select>

<select id="isBlackUserByUserId" resultType="Long">
	SELECT id FROM filter_black_user WHERE black_state = 1 and user_id = #{userId} LIMIT 1
</select>
<select id="isBlackUserByIP" resultType="Long">
	SELECT id FROM filter_black_user WHERE black_state = 1 and ip = #{ip} LIMIT 1
</select>
</mapper>