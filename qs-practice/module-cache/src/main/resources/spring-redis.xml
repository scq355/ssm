<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd">

  <context:property-placeholder location="classpath:redis.properties"/>

  <context:component-scan base-package="com.qs.p2p.redis"/>

  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	<property name="maxIdle" value="${redis.maxIdle}"/>
	<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
  </bean>

  <!-- Jedis ConnectionFactory -->
  <bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}"
		p:port="${redis.port}"
		p:password="${redis.pass}"
		p:pool-config-ref="poolConfig"/>

  <!--
  	JdkSerializationRedisSerializer对key和value都进行了序列化，变成字节序列（byte[]）,然后再调用jedis进行存储
  	StringRedisSerializer是根据指定的charset对数据的字节序列编码成string，更适用于字符串场景, 相当于new String(bytes, charset)和string.getBytes(charset)的直接封装，也更加轻量与高效
  -->
  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
	<property name="keySerializer">
	  <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	</property>
	<property name="hashKeySerializer">
	  <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	</property>
	<property name="valueSerializer">
	  <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
	</property>
	<property name="hashValueSerializer">
	  <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
	</property>
  </bean>

</beans>