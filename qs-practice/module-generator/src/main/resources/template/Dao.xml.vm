<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${classname}Dao">
  <resultMap id="${classname}" type="${package}.model.${className}">
  #foreach($column in $columns)
    <result property="${column.attrname}" column="${column.columnName}"/>
  #end
  </resultMap>

  <sql id="sql_insert_column_list">
	<trim prefix="" prefixOverrides=",">
    #foreach($column in $columns)
    <if test="entity.${column.attrname} != null">,${column.columnName}</if>
    #end
	</trim>
  </sql>

  <sql id="sql_insert_property_list">
	<trim prefix="" prefixOverrides=",">
    #foreach($column in $columns)
    <if test="entity.${column.attrname} != null">,#{entity.${column.attrname}}</if>
    #end
	</trim>
  </sql>

  <sql id="sql_column_list">
    #foreach($column in $columns)
    #if($column.columnName != 'id'),#end${column.columnName}
    #end
  </sql>

  <sql id="sql_update_set">
	<trim prefix="SET" prefixOverrides=",">
	  <if test="entity != null">
      #foreach($column in $columns)
      <choose>
        <when test="entity.forceUpdateProperties.contains('${column.attrname}')">
        ,${column.attrname} = #{entity.${column.columnName}, jdbcType=${column.dataTypeUpperCase}}
        </when>
        <otherwise>
        <if test="entity.${column.columnName} != null and entity.${column.columnName} != ''">,${column.attrname}
          = #{entity.${column.attrname}}</if>
        </otherwise>
      </choose>
      #end
    <if test="!entity.incrementUpdateMap.isEmpty()">
      ,
      <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
      ${key} = ${key} + #{value}
      </foreach>
    </if>
	  </if>
	</trim>
  </sql>

  <sql id="sql_condition">
  <if test="condition != null">
    #foreach($column in $columns)
      <if test="condition.${column.attrname} != null">AND ${column.columnName} = #{condition.${column.attrname}}</if>
    #end
    <if test="!condition.expressionChainList.empty">
    AND
    <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
      <if test="!expressionChain.expressionList.empty">
      <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
        <choose>
        <when test="expression.type == 0"> ${expression.column} ${expression.operator}</when>
        <when test="expression.type == 1"> ${expression.column} ${expression.operator} #{expression.value}</when>
        <when test="expression.type == 2"> ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}</when>
        <when test="expression.type == 3"> ${expression.column} ${expression.operator}
          <foreach collection="expression.values" item="value" open="(" separator="," close=")">
          #{value}
          </foreach>
        </when>
        </choose>
      </foreach>
      </if>
    </foreach>
    </if>
  </if>
  </sql>

  <sql id="sql_pagination_start">
	<![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
	<![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
	<selectKey keyProperty="entity.id" resultType="java.lang.Integer" order="AFTER">
	  SELECT LAST_INSERT_ID()
	</selectKey>
	INSERT INTO ${tableName} (
	<include refid="sql_insert_column_list"/>
	) VALUES (
	<include refid="sql_insert_property_list"/>
	)
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="${classname}">
	SELECT
	<include refid="sql_column_list"/>
	FROM ${tableName}
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="${classname}">
	SELECT
	<include refid="sql_column_list"/>
	FROM ${tableName}
	WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="${classname}">
	<if test="offset != null">
	  <include refid="sql_pagination_start"/>
	</if>
	SELECT
	<include refid="sql_column_list"/>
	FROM ${tableName}
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
	<if test="orderBy != null">
	  ORDER BY ${orderBy}
	</if>
	<if test="offset != null">
	  <include refid="sql_pagination_end"/>
	</if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT count(${count_column}) AS count_ FROM ${tableName}
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
	SELECT ${aggregate_sql} FROM ${tableName}
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
  </select>

  <update id="update" parameterType="java.util.Map">
	UPDATE ${tableName}
	<include refid="sql_update_set"/>
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
	UPDATE ${tableName}
	<include refid="sql_update_set"/>
	WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
	DELETE FROM ${tableName}
	<trim prefix="WHERE" prefixOverrides="AND">
	  <include refid="sql_condition"/>
	</trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
	DELETE FROM ${tableName}
	WHERE id = #{id}
  </delete>
</mapper>